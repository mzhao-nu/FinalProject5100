/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ClinicRole;

import Business.EcoSystem;
import Business.UserAccount.UserAccount;
import Reporting.CommonReporting.Children;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Graphics;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gyt
 */
public class DoctorJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem ecoSystem; 
    private UserAccount userAccount;
    
    public DoctorJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecoSystem) {
        initComponents();
        this.ecoSystem = ecoSystem;
        this.userAccount = account;
        this.userProcessContainer = userProcessContainer;
        btnDetails.setBackground(new java.awt.Color(255, 255, 255, 0));
        btnDetails.setBorder(new LineBorder(Color.ORANGE, 2));
        btnSearch.setBackground(new java.awt.Color(255, 255, 255, 0));
        btnSearch.setBorder(new LineBorder(Color.ORANGE, 2));
        btnBack.setBackground(new java.awt.Color(255, 255, 255, 0));
        btnBack.setBorder(new LineBorder(Color.ORANGE, 2));
        
        populateTable();
       
    }
    
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        for(Children children:ecoSystem.getChildrenDirectory().getChildrenDirectory()){
            if(children.getStatus().equals("Found")||children.getStatus().equals("treated")){
                Object[] row = new Object[5];
                row[0] = children.getId();
                row[1] = children.getName();
                row[2] = children.getApproxAge();
                row[3] = children.getStatus();
                row[4] = children.getMedicalAdvice();
            
                model.addRow(row);
            }
        }
    
    
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnDetails = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 204));
        jScrollPane1.setBorder(null);
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 153));

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 51)));
        jTable1.setFont(new java.awt.Font("Lucida Sans", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Child ID", "Child Name", "Approx Age", "Child Status", "Medical Advice"
            }
        ));
        jTable1.setSelectionBackground(new java.awt.Color(255, 204, 102));
        jTable1.setSelectionForeground(new java.awt.Color(255, 255, 204));
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1);
        jScrollPane1.setBounds(40, 30, 790, 190);

        btnDetails.setBackground(new java.awt.Color(255, 204, 153));
        btnDetails.setFont(new java.awt.Font("Lucida Sans", 0, 18)); // NOI18N
        btnDetails.setForeground(new java.awt.Color(255, 153, 0));
        btnDetails.setText("view details");
        btnDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailsActionPerformed(evt);
            }
        });
        add(btnDetails);
        btnDetails.setBounds(690, 270, 133, 31);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/catoon doctor.png"))); // NOI18N
        add(jLabel2);
        jLabel2.setBounds(-50, 260, 220, 210);
        add(txtSearch);
        txtSearch.setBounds(290, 270, 140, 27);

        btnSearch.setFont(new java.awt.Font("Lucida Sans", 0, 18)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 153, 51));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        add(btnSearch);
        btnSearch.setBounds(450, 270, 100, 31);

        jComboBox1.setFont(new java.awt.Font("Lucida Sans", 0, 18)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(255, 153, 51));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Name", "Status", " " }));
        add(jComboBox1);
        jComboBox1.setBounds(190, 270, 87, 28);

        btnBack.setFont(new java.awt.Font("Lucida Sans", 0, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 153, 51));
        btnBack.setText("<<back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(720, 420, 101, 31);
    }// </editor-fold>//GEN-END:initComponents

    private void btnDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailsActionPerformed
        // TODO add your handling code here:
       int selectRowIndex = jTable1.getSelectedRow();
       if(selectRowIndex<0){
           JOptionPane.showMessageDialog(this, "Please select a row to view details.");
           return;
       }
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String id = (String)model.getValueAt(selectRowIndex, 0);
        Children children =ecoSystem.getChildrenDirectory().getChildren(id);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        DetailsJPanel panel = new DetailsJPanel(userProcessContainer, userAccount, ecoSystem, children);
        userProcessContainer.add(panel);
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnDetailsActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String item = (String)jComboBox1.getSelectedItem();
        ArrayList<Children> selectedc = new ArrayList<Children>();
        if(item.equals("ID")){
            int id =Integer.parseInt(txtSearch.getText());
            for(Children c : ecoSystem.getChildrenDirectory().getChildrenDirectory()){
                if(c.getId().equals(txtSearch.getText())){
                selectedc.add(c);
                }
            }
        }
        if(item.equals("Name")){
            String Name =txtSearch.getText();
            for(Children c : ecoSystem.getChildrenDirectory().getChildrenDirectory()){
                if(c.getName().equals(Name)){
                selectedc.add(c);
                }
            }
        }
        if(item.equals("Status")){
            String Status =txtSearch.getText();
            for(Children c : ecoSystem.getChildrenDirectory().getChildrenDirectory()){
                if(c.getStatus().equals(Status)){
                selectedc.add(c);
                }
            }
        }
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        for(Children children:selectedc){
            
            Object[] row = new Object[5];
            row[0] = children.getId();
            row[1] = children.getName();
            row[2] = children.getApproxAge();
            row[3] = children.getStatus();
            row[4] = children.getMedicalAdvice();
            
            model.addRow(row);
        
        }
        
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_btnBackActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDetails;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
